#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define BUTTON_PIN 13  // Pin waar de knop op is aangesloten

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Variabele om bij te houden welk scherm we tonen
int currentScreen = 1;

const unsigned char epd_bitmap_Bitmap [] PROGMEM = {
	// 'GUI1', 64x48px
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0x8f, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xfc, 0xe3, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xf9, 0xfc, 0xf8, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xfc, 0x7c, 0xf8, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0x1c, 0xe3, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xc4, 0x8f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0x8c, 0xc3, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xfe, 0x3c, 0xf0, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xf8, 0xfc, 0xf8, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0xe3, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xfc, 0x8f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
	0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {
  Wire.begin(21, 22);
  Serial.begin(115200);
  
  // Configureer de knop pin als input met pull-up weerstand
  pinMode(BUTTON_PIN, INPUT_PULLUP);

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    while(1);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  
  // Toon het eerste scherm
  showScreen(currentScreen);
}

void showScreen(int screenNumber) {
  display.clearDisplay();
  
  if (screenNumber == 1) {
    // Eerste scherm: bitmap
    display.drawBitmap((SCREEN_WIDTH - 64) / 2, 16, epd_bitmap_Bitmap, 64, 48, WHITE);
  } else {
    // Tweede scherm: tekst
    display.setCursor(0, 0);
    display.println("Tweede scherm!");
    display.println("Druk op de knop");
    display.println("om terug te gaan");
  }
  
  display.display();
}

void loop() {
  // Lees de knop status
  if (digitalRead(BUTTON_PIN) == LOW) {  // Knop is ingedrukt (LOW omdat we INPUT_PULLUP gebruiken)
    delay(50);  // Debounce
    if (digitalRead(BUTTON_PIN) == LOW) {
      // Wissel van scherm
      currentScreen = (currentScreen == 1) ? 2 : 1;
      showScreen(currentScreen);
      
      // Wacht tot de knop is losgelaten
      while(digitalRead(BUTTON_PIN) == LOW) {
        delay(10);
      }
    }
  }
}
