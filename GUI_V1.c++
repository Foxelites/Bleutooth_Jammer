#include <Wire.h>
    #include <Adafruit_GFX.h>
    #include <Adafruit_SSD1306.h>
    
    #define SCREEN_WIDTH 128
    #define SCREEN_HEIGHT 64
    #define OLED_RESET -1
    Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
    
    const unsigned char epd_bitmap_Bitmap [] PROGMEM = {
        // 'GUI1', 64x48px
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
        0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
        0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0x8f, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xfc, 0xe3, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xf9, 0xfc, 0xf8, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xfc, 0x7c, 0xf8, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0x1c, 0xe3, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xc4, 0x8f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0x8c, 0xc3, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xfe, 0x3c, 0xf0, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xf8, 0xfc, 0xf8, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0xe3, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xfc, 0x8f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 
        0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
        0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
    };
    
    void setup() {
      Wire.begin(21, 22);
      Serial.begin(115200);
    
      if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
        Serial.println(F("SSD1306 allocation failed"));
        while(1);
      }
      display.clearDisplay();
    
      // Center horizontally, position higher vertically
      display.drawBitmap((SCREEN_WIDTH - 64) / 2, 16, epd_bitmap_Bitmap, 64, 48, WHITE);
      display.display();
    }
    
    void loop() {
      // niets nodig
    }
    